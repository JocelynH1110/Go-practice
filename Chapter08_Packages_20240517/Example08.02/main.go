// 8-2-3 套件的宣告
/*
每個 Go 語言檔案開頭都一定是套件宣告，指出該檔案屬於的套件名稱：

＊＊package <套件名稱>

所有定義在 strings 套件內（位於 string 目錄底下）的這些 Go 原始碼檔案，其函式、型別及變數都能統一透過匯入 strings 套件來存取。就算這些功能分散在多個檔案之間，仍是同一個套件。
從內部來說，所有檔案也可以自由存取彼此的內容，比如位於其他檔案的函式或型別定義。

但對於套件之外的程式，套件必須決定有哪些東西是可以被外部「看見」。
*/

========================================================================
// 8-2-4 將套件的功能匯出
/*
在 Go 語言中，套件的變數、常數、型別和函式等如果有匯出（exported）就表示他們可以被套件外的程式存取。反之，則只能被套件內部使用。

如何辨別是否有匯出：以英文大寫字母開頭的就是有匯出的。（字首是否為 Unicode 大寫字元）。

函式、型別、變數名稱可以使用中文、日文等非英文文字，但他們都不是 Unicode 大寫字元，就會使功能被視為未匯出。Go 官方建議的替代方式是在這類前面加上一個 X 或 x。
Go 語言沒有所謂的存取修飾符（access modifier），例如 public 或 private 這類關鍵字，單純以大小寫來決定它是否匯出。
*/
//例子、將套件內大寫的檔案匯出
package main

import (
	"fmt"
	"strings"
)

func main() {
	str := "ig"
	if strings.Contains(str, "Ig") {
		fmt.Println("value found in str")
	}
}

// 以下為 Contains() 函式的定義
func Contains(s, substr string) bool {
	return Index(s, substr) >= 0
}

//Index() 函式會尋找 substr 在 s 中的起始索引，找不到會回傳 -1 ，故傳回 0 以上的值即代表存在。
